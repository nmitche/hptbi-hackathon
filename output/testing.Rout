
R version 4.0.2 (2020-06-22) -- "Taking Off Again"
Copyright (C) 2020 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ################################################################################
> #               HACKATHON PARTICIPANTS -- DO NOT EDIT THIS FILE                #
> ################################################################################
> 
> ################################################################################
> # source scripts - need this to prep data and have access to the predict methods
> source("prepare_mortality_data.R")
> source("prepare_fss_data.R")
> source("mortality_model.R")
> source("fss_model.R")
> 
> USE_TESTING_DATA <- file.exists("./csvs/testing.csv")
> 
> ################################################################################
> # import the trained models
> trained_mortality_model <- readRDS(file = "./output/trained_mortality_model.rds")
> trained_fss_model       <- readRDS(file = "./output/trained_fss_model.rds")
> 
> ################################################################################
> # import and prepare the training data set
> tic <- Sys.time()
> m_training_data <- prepare_mortality_data(training = TRUE)

Attaching package: 'dplyr'

The following objects are masked from 'package:stats':

    filter, lag

The following objects are masked from 'package:base':

    intersect, setdiff, setequal, union

Warning messages:
1: package 'DataExplorer' was built under R version 4.0.5 
2: package 'dplyr' was built under R version 4.0.5 
> toc <- Sys.time()
> 
> cat("seconds elapsed to prepare mortality training data |",
+     as.numeric(difftime(toc, tic, units = "secs")),
+     "\n",
+     file = "./output/evaluation.txt",
+     sep = " ",
+     append = TRUE)
> 
> tic <- Sys.time()
> f_training_data <- prepare_fss_data(training = TRUE)
> toc <- Sys.time()
> 
> cat("seconds elapsed to prepare fss training data |",
+     as.numeric(difftime(toc, tic, units = "secs")),
+     "\n",
+     file = "./output/evaluation.txt",
+     sep = " ",
+     append = TRUE)
> 
> ################################################################################
> # prediction for the mortality outcome
> 
> tic <- Sys.time()
> predicted_mortality <- predict(trained_mortality_model, newdata = m_training_data)
Error: evaluation nested too deeply: infinite recursion / options(expressions=)?
Execution halted
